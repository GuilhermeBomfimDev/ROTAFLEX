// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RotaFlex.Datas;

#nullable disable

namespace RotaFlex.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("RotaFlex.Models.Carro", b =>
                {
                    b.Property<int>("IdCarro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdCarro"));

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("MotoristaId")
                        .HasColumnType("int");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdCarro");

                    b.HasIndex("MotoristaId")
                        .IsUnique();

                    b.ToTable("Carros");
                });

            modelBuilder.Entity("RotaFlex.Models.Motorista", b =>
                {
                    b.Property<int>("IdMotorista")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdMotorista"));

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Nota")
                        .HasColumnType("int");

                    b.Property<int>("QtCorrida")
                        .HasColumnType("int");

                    b.HasKey("IdMotorista");

                    b.ToTable("Motoristas");
                });

            modelBuilder.Entity("RotaFlex.Models.TransportePublico", b =>
                {
                    b.Property<int>("IdTransporte")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdTransporte"));

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Valor")
                        .HasColumnType("double");

                    b.HasKey("IdTransporte");

                    b.ToTable("TransportesPublico");
                });

            modelBuilder.Entity("RotaFlex.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<byte[]>("Salt")
                        .HasColumnType("longblob");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("RotaFlex.Models.Viagem", b =>
                {
                    b.Property<int>("IdCorrida")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdCorrida"));

                    b.Property<int>("CarroId")
                        .HasColumnType("int");

                    b.Property<int>("MotoristaId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioIdUsuario")
                        .HasColumnType("int");

                    b.Property<double>("Valor")
                        .HasColumnType("double");

                    b.HasKey("IdCorrida");

                    b.HasIndex("CarroId");

                    b.HasIndex("MotoristaId");

                    b.HasIndex("UsuarioId");

                    b.HasIndex("UsuarioIdUsuario");

                    b.ToTable("Viagens");
                });

            modelBuilder.Entity("RotaFlex.Models.Carro", b =>
                {
                    b.HasOne("RotaFlex.Models.Motorista", "Motorista")
                        .WithOne("Carro")
                        .HasForeignKey("RotaFlex.Models.Carro", "MotoristaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Motorista");
                });

            modelBuilder.Entity("RotaFlex.Models.Viagem", b =>
                {
                    b.HasOne("RotaFlex.Models.Carro", "Carro")
                        .WithMany()
                        .HasForeignKey("CarroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RotaFlex.Models.Motorista", "Motorista")
                        .WithMany()
                        .HasForeignKey("MotoristaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RotaFlex.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RotaFlex.Models.Usuario", null)
                        .WithMany("ViagensList")
                        .HasForeignKey("UsuarioIdUsuario");

                    b.Navigation("Carro");

                    b.Navigation("Motorista");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("RotaFlex.Models.Motorista", b =>
                {
                    b.Navigation("Carro")
                        .IsRequired();
                });

            modelBuilder.Entity("RotaFlex.Models.Usuario", b =>
                {
                    b.Navigation("ViagensList");
                });
#pragma warning restore 612, 618
        }
    }
}
